{"title":"Nginx基础操作","uid":"1f19f622d6850c416c86c516f221243f","slug":"Nginx基础操作","date":"2022-01-28T08:38:57.000Z","updated":"2022-01-28T08:44:31.262Z","comments":true,"path":"api/articles/Nginx基础操作.json","keywords":null,"cover":"https://tianmy.oss-cn-shanghai.aliyuncs.com/img/nginx.jpg","content":"<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#快速启动一个Nginx\ndocker run --name nginx-learn -p 80:80 -d nginx</code></pre>\n<h3 id=\"1-常用命令\"><a href=\"#1-常用命令\" class=\"headerlink\" title=\"1.常用命令\"></a>1.常用命令</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#常用命令\n-T: 查看当前nginx的配置\n-s: 向master进程发送指令: \n    stop: 关闭\n    quit: 当前工作处理完成后关闭\n    reopen: 重启\n    reload: 重载配置文件，热重启</code></pre>\n<h3 id=\"2-语法\"><a href=\"#2-语法\" class=\"headerlink\" title=\"2.语法\"></a>2.语法</h3><ul>\n<li>每条指令以 ; 结尾，指令与参数之间以空格区隔</li>\n<li>指令块放在 {} 中</li>\n<li>include 允许引用外部的配置文件</li>\n<li>使用 # 符号添加注释</li>\n<li>使用 $ 符号使用变量</li>\n<li>部分指令的参数支持正则表达式</li>\n</ul>\n<h3 id=\"3-全局变量\"><a href=\"#3-全局变量\" class=\"headerlink\" title=\"3.全局变量\"></a>3.全局变量</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#请求信息中的 Host，如果请求中没有 Host 行，则等于设置的服务器名，不包含端口\n$host\n#客户端请求类型，如 GET、POST\n$request_method\n#客户端的 IP 地址\n$remote_addr\n#请求中的参数\n$args\n#请求中变量名 PARAMETER 参数的值\n$arg_PARAMETERGET\n#请求头中的 Content-length 字段\n$content_length\n#客户端agent信息\n$http_user_agent\n#客户端cookie信息\n$http_cookie\n#客户端的IP地址\n$remote_addr\n#客户端的端口\n$remote_port\n#客户端agent信息\n$http_user_agent\n#请求使用的协议，如 HTTP&#x2F;1.0、HTTP&#x2F;1.1\n$server_protocol\n#服务器地址\n$server_addr\n#服务器名称\n$server_name\n#服务器的端口号\n$server_port\n#方法（如http，https）\n$schemeHTTP </code></pre>\n<h3 id=\"4-配置文件\"><a href=\"#4-配置文件\" class=\"headerlink\" title=\"4.配置文件\"></a>4.配置文件</h3><p>nginx.conf示例：</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#全局块，此处配置全局生效\ndaemon on;\nuser nobody;\nwork_process 2;\npid logs&#x2F;nginx.pid;\nerror_log logs&#x2F;error.log debug;\n#events块\nevents &#123;\n    #此处是处理连接的配置\n    #此处配置影响性能\n    worker_connections 1024;\n&#125;\n#http块\nhttp &#123;\n    # 最常用部分，代理、缓存、日志等配置  \n    include test.conf;\n    keepalive_timeout &#x3D; 10;\n    #server块\n    server &#123;\n        # 监听端口\n        listen 80\n        # 域名配置\n        server_name localhost\n        #location块\n        location &#x2F;one &#123;\n            # 配置请求路径是&#39;&#x2F;one&#39;的代理\n        &#125;\n        #同一个server块下可以有多个location块\n        location &#x2F;two &#123;\n            # 配置请求路径是&#39;&#x2F;two&#39;的代理\n        &#125;\n    &#125; \n    #同一个http块下可以有多个server块\n    server &#123;\n        # 配置另一个服务的代理\n    &#125;\n&#125;</code></pre>\n<h4 id=\"4-1-全局块\"><a href=\"#4-1-全局块\" class=\"headerlink\" title=\"4-1.全局块\"></a>4-1.全局块</h4><p>一般位于events块之前，通常配置内容包括：</p>\n<h5 id=\"daemon\"><a href=\"#daemon\" class=\"headerlink\" title=\"daemon\"></a>daemon</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#以守护模式运行Nginx\ndaemon on;</code></pre>\n<h5 id=\"user\"><a href=\"#user\" class=\"headerlink\" title=\"user\"></a>user</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#Nginx的用户\n#用法\nuser [用户名] [用户组]\n#示例: 允许root组的admin用户访问\nuser admin root\n## user在Windows中不生效\nuser nobody 或者 # user xx 代表所有用户都可以运行</code></pre>\n<h5 id=\"work-process\"><a href=\"#work-process\" class=\"headerlink\" title=\"work_process\"></a>work_process</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#配置工作线程数，一般与服务器的CPU核数保持一致\n#用法\nworker_process [线程数] | auto\n#示例: 指定2个线程\nworker_process 2;</code></pre>\n<h5 id=\"pid\"><a href=\"#pid\" class=\"headerlink\" title=\"pid\"></a>pid</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#Nginx 主进程Pid的记录位置\n#用法\npid [路径]\n#示例\npid logs&#x2F;nginx.pid</code></pre>\n<h5 id=\"error-log\"><a href=\"#error-log\" class=\"headerlink\" title=\"error_log\"></a>error_log</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#日志保存路径\n#用法\nerror_log [路径] [日志级别,常用的级别：debug|info|error|warn]\n#示例\nerror_log logs&#x2F;error.log error\nerror_log logs&#x2F;info.log info</code></pre>\n<p>#引入的配置文件</p>\n<h4 id=\"4-2-events块\"><a href=\"#4-2-events块\" class=\"headerlink\" title=\"4-2.events块\"></a>4-2.events块</h4><h5 id=\"worker-connections\"><a href=\"#worker-connections\" class=\"headerlink\" title=\"worker_connections\"></a>worker_connections</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">#配置单个worker的最大连接数\nworker_connections 2000;</code></pre>\n<h5 id=\"工作模式\"><a href=\"#工作模式\" class=\"headerlink\" title=\"工作模式\"></a>工作模式</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">use epoll|select|poll|kqueue...</code></pre>\n\n<h4 id=\"4-3-http块\"><a href=\"#4-3-http块\" class=\"headerlink\" title=\"4-3.http块\"></a>4-3.http块</h4><h5 id=\"client-max-body-size\"><a href=\"#client-max-body-size\" class=\"headerlink\" title=\"client_max_body_size\"></a>client_max_body_size</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"></code></pre>\n<h5 id=\"keepalive-timeout\"><a href=\"#keepalive-timeout\" class=\"headerlink\" title=\"keepalive_timeout\"></a>keepalive_timeout</h5><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"></code></pre>\n<h4 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h4><h4 id=\"动静分离\"><a href=\"#动静分离\" class=\"headerlink\" title=\"动静分离\"></a>动静分离</h4><h4 id=\"高可用\"><a href=\"#高可用\" class=\"headerlink\" title=\"高可用\"></a>高可用</h4><h3 id=\"最佳实践参考\"><a href=\"#最佳实践参考\" class=\"headerlink\" title=\"最佳实践参考\"></a>最佳实践参考</h3><h3 id=\"使用注意\"><a href=\"#使用注意\" class=\"headerlink\" title=\"使用注意\"></a>使用注意</h3><h4 id=\"1-路径配置\"><a href=\"#1-路径配置\" class=\"headerlink\" title=\"1.路径配置\"></a>1.路径配置</h4><pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\"># 例子1\nserver &#123;\n    listen 8080;\n    server_name 192.168.0.222;\n    \n    location &#x2F;api &#123;\n                proxy_pass   http:&#x2F;&#x2F;192.168.1.123:9000;  \n            &#125;\n        \n# 例子2\nserver &#123;\n    listen 8080;\n    server_name 192.168.2.222;\n    \n    location &#x2F;api &#123;\n                proxy_pass   http:&#x2F;&#x2F;192.168.1.123:9000&#x2F;;  \n            &#125;</code></pre>\n<p><strong>注意location后面路径的 / 和proxy_pass路径的 /</strong></p>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">#例子1：\n#请求：\nhttp:&#x2F;&#x2F;192.168.0.222:8080&#x2F;api&#x2F;user&#x2F;login\n#nginx处理后的请求：\nhttp:&#x2F;&#x2F;192.168.1.123:9000&#x2F;api&#x2F;user&#x2F;login\n#例子2：\n#请求：\nhttp:&#x2F;&#x2F;192.168.0.222:8080&#x2F;api&#x2F;user&#x2F;login\n#nginx处理后的请求：\nhttp:&#x2F;&#x2F;192.168.1.123:9000&#x2F;&#x2F;user&#x2F;login</code></pre>\n<p>例子1与例子2的区别是例子2中的proxy_pass除了IP和Port外，还配置了上下文，这里的规则是：<br>1、如果proxy_pass中的路径存在上下文(即端口后存在/)：</p>\n<ul>\n<li>替换IP和Port；</li>\n<li>将location中的路径替换为上下文；</li>\n<li>拼接余下的路径；</li>\n</ul>\n<p>2、如果proxy_pass中的路径不存在上下文(即端口后没有/及后续路径)：</p>\n<ul>\n<li>替换IP和Port，其余不动；</li>\n</ul>\n","feature":true,"text":"#快速启动一个Nginx docker run --name nginx-learn -p 80:80 -d nginx 1.常用命令#常用命令 -T: 查看当前nginx的配置 -s: 向master进程发送指令: stop: 关闭 quit: 当前工作处理完成后关闭 reop...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/tags/Nginx.json"},{"name":"工具","slug":"工具","count":1,"path":"api/tags/工具.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.常用命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2.语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">3.全局变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">4.配置文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-1-%E5%85%A8%E5%B1%80%E5%9D%97\"><span class=\"toc-text\">4-1.全局块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#daemon\"><span class=\"toc-text\">daemon</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#user\"><span class=\"toc-text\">user</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#work-process\"><span class=\"toc-text\">work_process</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#pid\"><span class=\"toc-text\">pid</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#error-log\"><span class=\"toc-text\">error_log</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-2-events%E5%9D%97\"><span class=\"toc-text\">4-2.events块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#worker-connections\"><span class=\"toc-text\">worker_connections</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">工作模式</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4-3-http%E5%9D%97\"><span class=\"toc-text\">4-3.http块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#client-max-body-size\"><span class=\"toc-text\">client_max_body_size</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#keepalive-timeout\"><span class=\"toc-text\">keepalive_timeout</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1\"><span class=\"toc-text\">负载均衡</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E9%9D%99%E5%88%86%E7%A6%BB\"><span class=\"toc-text\">动静分离</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%AB%98%E5%8F%AF%E7%94%A8\"><span class=\"toc-text\">高可用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E5%8F%82%E8%80%83\"><span class=\"toc-text\">最佳实践参考</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">使用注意</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E8%B7%AF%E5%BE%84%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.路径配置</span></a></li></ol></li></ol>","author":{"name":"Shepard","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"求道者","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"日常Linux操作总结","uid":"27744e614f7ee333f0c3a9e11c89d431","slug":"日常Linux使用总结","date":"2022-01-27T07:58:57.000Z","updated":"2022-01-27T07:59:07.256Z","comments":true,"path":"api/articles/日常Linux使用总结.json","keywords":null,"cover":"https://tianmy.oss-cn-shanghai.aliyuncs.com/img/Linux.jpg","text":"常用场景包括： 1、查看Linux的版本、cpu、内存、磁盘等信息 2、查看磁盘占用，查找文件和目录，处理大文件 3、处理日志 4、端口、进程相关操作 5、crontab定时任务 6、自定义快捷命令 7、常见环境配置：防火墙、免登陆、yum、时间、JDK等 1.查看基础信息# 查...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":2,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":2,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":1,"path":"api/tags/Shell.json"}],"author":{"name":"Shepard","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"求道者","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}